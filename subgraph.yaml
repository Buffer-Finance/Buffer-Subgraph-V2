specVersion: 0.0.6
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: BufferBinaryOptions
    network: arbitrum-sepolia
    source:
      abi: BufferBinaryOptions
      startBlock: 2726179
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - UserOptionData
        - OptionContract
        - User
        - QueuedOptionData
        - Tournament
      abis:
        - name: BufferBinaryOptions
          file: ./abis/BufferBinaryOptions.json
        - name: BufferRouter
          file: ./abis/BufferRouter.json
      eventHandlers:
        - event: CreateContract(address,string)
          handler: handleCreateContract
        - event: Create(indexed address,indexed uint256,indexed uint256,uint256,uint256)
          handler: handleCreate
        - event: Expire(indexed uint256,uint256,uint256)
          handler: handleExpire
        - event: Exercise(indexed address,indexed uint256,uint256,uint256)
          handler: handleExercise
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: TournamentManager
    network: arbitrum-sepolia
    source:
      address: "0xD8052260f911B51223e0aB25EcD05302149625ec"
      abi: TournamentManager
      startBlock: 2726179
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Tournament
      abis:
        - name: TournamentManager
          file: ./abis/TournamentManager.json
      eventHandlers:
        - event: CreateTournament(uint256,string)
          handler: handleCreateTournament
        - event: VerifyTournament(uint256)
          handler: handleVerifyTournament
        - event: StartTournament(uint256)
          handler: handleStartTournament
        - event: EndTournament(uint256)
          handler: handleEndTournament
        - event: CloseTournament(uint256,string)
          handler: handleCloseTournament
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: BufferRouter
    network: arbitrum-sepolia
    source:
      address: "0x0A380A5500e3F65079ca2e94aD276FdFBaF016eC"
      abi: BufferRouter
      startBlock: 2726179
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - QueuedOptionData
        - UserOptionData
      abis:
        - name: BufferBinaryOptions
          file: ./abis/BufferBinaryOptions.json
        - name: BufferRouter
          file: ./abis/BufferRouter.json
      eventHandlers:
        - event: InitiateTrade(indexed address,uint256,uint256,uint256)
          handler: handleInitiateTrade
        - event: CancelTrade(indexed address,uint256,uint256,string)
          handler: handleCancelTrade
        - event: OpenTrade(indexed address,uint256,uint256,uint256)
          handler: handleOpenTrade
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: Config
    network: arbitrum-sepolia
    source:
      abi: Config
      startBlock: 2726179
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ConfigContract
      abis:
        - name: Config
          file: ./abis/Config.json
      eventHandlers:
        - event: UpdateMinPeriod(uint32)
          handler: handleUpdateMinPeriod
        - event: UpdateMaxPeriod(uint32)
          handler: handleUpdateMaxPeriod
        - event: UpdateMaxFee(uint256)
          handler: handleUpdateMaxFee
        - event: UpdateMinFee(uint256)
          handler: handleUpdateMinFee
        - event: UpdateCreationWindowContract(address)
          handler: handleUpdateCreationWindowContract
      file: ./src/mapping.ts
