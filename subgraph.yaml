specVersion: 0.0.6
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: BufferBinaryOptions
    network: arbitrum-sepolia
    source:
      abi: BufferBinaryOptions
      startBlock: 18576428
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - UserOptionData
        - OptionContract
        - User
        - QueuedOptionData
      abis:
        - name: BufferBinaryOptions
          file: ./abis/BufferBinaryOptions.json
        - name: BufferRouter
          file: ./abis/BufferRouter.json
      eventHandlers:
        - event: CreateOptionsContract(address,address,address,string,string,uint8)
          handler: handleCreateContract
        - event: Create(indexed address,indexed uint256,uint256,uint256,uint128,uint32,uint32,bool,uint256)
          handler: handleCreate
        - event: Expire(indexed uint256,uint256,uint128,bool)
          handler: handleExpire
        - event: Exercise(indexed address,indexed uint256,uint256,uint128,bool)
          handler: handleExercise
        - event: Pause(bool)
          handler: handlePause
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: AccountRegistrar
    network: arbitrum-sepolia
    source:
      address: "0x1dB43d2227637d6E0ec6850299850FD0795a4731"
      abi: AccountRegistrar
      startBlock: 18576428
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - UserOptionData
        - EOAtoOneCT
        - DeregisteredAccount
      abis:
        - name: BufferBinaryOptions
          file: ./abis/BufferBinaryOptions.json
        - name: BufferRouter
          file: ./abis/BufferRouter.json
        - name: AccountRegistrar
          file: ./abis/AccountRegistrar.json
      eventHandlers:
        - event: RegisterAccount(indexed address,indexed address,uint256)
          handler: handleRegisterAccount
        - event: DeregisterAccount(indexed address,uint256)
          handler: handleDeregisterAccount
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: BufferRouter
    network: arbitrum-sepolia
    source:
      address: "0x3ca907E4FADf6a7e705D177d122c3105D1dAaC40"
      abi: BufferRouter
      startBlock: 18576428
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - QueuedOptionData
        - UserOptionData
      abis:
        - name: BufferBinaryOptions
          file: ./abis/BufferBinaryOptions.json
        - name: BufferRouter
          file: ./abis/BufferRouter.json
      eventHandlers:
        - event: ContractRegistryUpdated(address,bool)
          handler: handleContractRegistryUpdated
        - event: InitiateTrade(indexed address,uint256,bytes,uint256,bool,uint32,bool,uint32,address,string,uint256)
          handler: handleInitiateTrade
        - event: CancelTrade(indexed address,uint256,string,address)
          handler: handleCancelTrade
        - event: OpenTrade(indexed address,indexed uint256,indexed uint256,address)
          handler: handleOpenTrade
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: Config
    network: arbitrum-sepolia
    source:
      abi: Config
      startBlock: 18576428
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ConfigContract
      abis:
        - name: Config
          file: ./abis/Config.json
      eventHandlers:
        # - event: UpdateMinPeriod(uint32)
        #   handler: handleUpdateMinPeriod
        # - event: UpdateMaxPeriod(uint32)
        #   handler: handleUpdateMaxPeriod
        # - event: UpdateMaxFee(uint256)
        #   handler: handleUpdateMaxFee
        - event: UpdateMinFee(uint256)
          handler: handleUpdateMinFee
        - event: UpdateCreationWindowContract(address)
          handler: handleUpdateCreationWindowContract
        - event: UpdateCircuitBreakerContract(address)
          handler: handleUpdateCircuitBreakerContract
        # - event: UpdateIV(uint32)
        #   handler: handleUpdateIV
        # - event: UpdateIVFactorITM(uint256)
        #   handler: handleUpdateIVFactorITM
        # - event: UpdateIVFactorOTM(uint256)
        #   handler: handleUpdateIVFactorOTM
        - event: UpdateOptionStorageContract(address)
          handler: handleUpdateOptionStorageContract
        # - event: UpdatePayout(uint256)
        #   handler: handleUpdatePayout
        - event: UpdatePlatformFee(uint256)
          handler: handleUpdatePlatformFee
        - event: UpdateSettlementFeeDisbursalContract(address)
          handler: handleUpdateSettlementFeeDisbursalContract
        - event: UpdateSf(uint256)
          handler: handleUpdateSf
        - event: UpdatetraderNFTContract(address)
          handler: handleUpdatetraderNFTContract
        - event: UpdateStrikeStepSize(uint128)
          handler: handleUpdateStrikeStepSize
      file: ./src/mapping.ts
