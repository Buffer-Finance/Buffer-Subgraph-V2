enum Period {
  hourly
  daily
  weekly
  total
}

type OptionContract @entity {
  category: Int!
  id: Bytes!
  address: Bytes
  isPaused: Boolean!
  openUp: BigInt!
  openDown: BigInt!
  openInterest: BigInt!
  tradeCount: Int!
  volume: BigInt!
  currentUtilization: BigInt
  token: String!
  # payoutForUp: BigInt
  # payoutForDown: BigInt
  asset: String
  pool: String!
  configContract: ConfigContract
  poolContract: Bytes
}

type ConfigContract @entity {
  id: Bytes!
  address: Bytes
  minPeriod: BigInt!
  maxPeriod: BigInt!
  minFee: BigInt!
  maxFee: BigInt!
  platformFee: BigInt!
}

# type PoolContract @entity{
#   id: Bytes!
#   address: Bytes!
#   meta:Bytes
#   token: Bytes
#   decimals: Int!
# }

type EOAtoOneCT @entity {
  id: String!
  oneCT: Bytes!
  eoa: Bytes!
}

type VolumePerContract @entity {
  id: String!
  amount: BigInt!
  period: Period!
  timestamp: BigInt!
  depositToken: String!
  optionContract: OptionContract!
  settlementFee: BigInt!
}

type UserOptionData @entity {
  id: String!
  optionContract: OptionContract!
  optionID: BigInt
  strike: BigInt
  totalFee: BigInt!
  user: User!
  creationTime: BigInt!
  expirationPrice: BigInt
  payout: BigInt
  state: Int
  amount: BigInt!
  expirationTime: BigInt
  depositToken: String!
  settlementFee: BigInt!
  lag: BigInt!
  poolToken: String!
  queueID: BigInt
  closeTime: BigInt
}

type User @entity {
  id: Bytes!
  address: Bytes!
}

type UserStat @entity {
  id: ID!
  uniqueCount: Int!
  uniqueCountCumulative: Int!
  period: Period!
  timestamp: BigInt
  existingCount: Int!
  users: [User!]!
}

type DailyUserStat @entity {
  id: String!
}

type DailyRevenueAndFee @entity {
  id: String!
  totalFee: BigInt!
  settlementFee: BigInt!
  timestamp: BigInt!
}

type WeeklyRevenueAndFee @entity {
  id: String!
  weekId: String!
  tokenId: String!
  totalFee: BigInt!
  settlementFee: BigInt!
  timestamp: BigInt!
}

type Leaderboard @entity {
  id: String!
  user: Bytes!
  netPnL: BigInt!
  totalTrades: Int!
  volume: BigInt!
  timestamp: String!
}

type WeeklyLeaderboard @entity {
  id: String!
  user: Bytes!
  netPnL: BigInt!
  totalTrades: Int!
  volume: BigInt!
  timestamp: String!
  tradesWon: Int!
  winRate: Int!
  arbVolume: BigInt!
  arbNetPnL: BigInt!
  arbTotalTrades: Int!
  arbTradesWon: Int!
  arbWinRate: Int!
  usdcVolume: BigInt!
  usdcNetPnL: BigInt!
  usdcTotalTrades: Int!
  usdcTradesWon: Int!
  usdcWinRate: Int!
}

type DashboardStat @entity {
  id: String!
  totalVolume: BigInt!
  totalSettlementFees: BigInt!
  totalTrades: Int!
  openInterest: BigInt!
}

type FeeStat @entity {
  id: ID!
  fee: BigInt!
  period: Period!
  timestamp: BigInt!
  feeARB: BigInt!
  feeUSDC: BigInt!
}

type VolumeStat @entity {
  id: String!
  amount: BigInt!
  period: Period!
  timestamp: BigInt!
  VolumeARB: BigInt!
  VolumeUSDC: BigInt!
}

type ReferralData @entity {
  id: Bytes!
  user: User!
  totalTradesReferred: Int!
  totalTradesReferredARB: Int!
  totalTradesReferredUSDC: Int!
  totalVolumeOfReferredTrades: BigInt!
  totalVolumeOfReferredTradesARB: BigInt!
  totalVolumeOfReferredTradesUSDC: BigInt!
  totalRebateEarned: BigInt!
  totalRebateEarnedARB: BigInt!
  totalRebateEarnedUSDC: BigInt!
  totalTradingVolume: BigInt!
  totalTradingVolumeARB: BigInt!
  totalTradingVolumeUSDC: BigInt!
  totalDiscountAvailed: BigInt!
  totalDiscountAvailedARB: BigInt!
  totalDiscountAvailedUSDC: BigInt!
}

type TradingStat @entity {
  id: ID!
  profit: BigInt!
  profitUSDC: BigInt!
  profitARB: BigInt!
  loss: BigInt!
  lossUSDC: BigInt!
  lossARB: BigInt!
  profitCumulative: BigInt!
  profitCumulativeUSDC: BigInt!
  profitCumulativeARB: BigInt!
  lossCumulative: BigInt!
  lossCumulativeUSDC: BigInt!
  lossCumulativeARB: BigInt!
  openInterest: BigInt!
  timestamp: BigInt!
  period: Period!
}

type PoolStat @entity {
  id: ID!
  amount: BigInt!
  period: Period!
  timestamp: BigInt!
  rate: BigInt!
}

type ARBPoolStat @entity {
  id: ID!
  amount: BigInt!
  period: Period!
  timestamp: BigInt!
  rate: BigInt!
}

type AssetTradingStat @entity {
  id: ID!
  contractAddress: Bytes!
  periodID: String!
  profit: BigInt!
  profitARB: BigInt!
  profitUSDC: BigInt!
  loss: BigInt!
  lossARB: BigInt!
  lossUSDC: BigInt!
  profitCumulative: BigInt!
  profitCumulativeUSDC: BigInt!
  profitCumulativeARB: BigInt!
  lossCumulative: BigInt!
  lossCumulativeUSDC: BigInt!
  lossCumulativeARB: BigInt!
  timestamp: BigInt!
  period: Period!
}

type UserRewards @entity {
  id: ID!
  referralReward: BigInt!
  referralDiscount: BigInt!
  nftDiscount: BigInt!
  cumulativeReward: BigInt!
  period: Period!
  timestamp: BigInt!
}

type BFRHolderData @entity {
  id: String!
  holders: Int!
  period: Period!
  timestamp: BigInt!
}
